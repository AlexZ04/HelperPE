// <auto-generated />
using System;
using HelperPE.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HelperPE.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250618060341_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HelperPE.Persistence.Entities.Events.EventAttendanceEntity", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("StudentId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("EventsAttendances");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Events.EventEntity", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ClassesAmount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Faculty.FacultyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Pairs.OtherActivitiesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ClassesAmount")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("OtherActivitiesEntity");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Pairs.PairAttendanceEntity", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PairId")
                        .HasColumnType("uuid");

                    b.Property<int>("ClassesAmount")
                        .HasColumnType("integer");

                    b.HasKey("StudentId", "PairId");

                    b.HasIndex("PairId");

                    b.ToTable("PairsAttendances");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Pairs.PairEntity", b =>
                {
                    b.Property<Guid>("PairId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("PairNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.HasKey("PairId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Pairs");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Pairs.SubjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Users.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("UserEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SubjectEntityTeacherEntity", b =>
                {
                    b.Property<Guid>("SubjectsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeachersId")
                        .HasColumnType("uuid");

                    b.HasKey("SubjectsId", "TeachersId");

                    b.HasIndex("TeachersId");

                    b.ToTable("SubjectEntityTeacherEntity");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Users.StudentEntity", b =>
                {
                    b.HasBaseType("HelperPE.Persistence.Entities.Users.UserEntity");

                    b.Property<int>("Course")
                        .HasColumnType("integer");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasIndex("FacultyId");

                    b.HasDiscriminator().HasValue("StudentEntity");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Users.TeacherEntity", b =>
                {
                    b.HasBaseType("HelperPE.Persistence.Entities.Users.UserEntity");

                    b.HasDiscriminator().HasValue("TeacherEntity");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Events.EventAttendanceEntity", b =>
                {
                    b.HasOne("HelperPE.Persistence.Entities.Events.EventEntity", "Event")
                        .WithMany("Attendances")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelperPE.Persistence.Entities.Users.StudentEntity", "Student")
                        .WithMany("EventsAttendances")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Pairs.OtherActivitiesEntity", b =>
                {
                    b.HasOne("HelperPE.Persistence.Entities.Users.StudentEntity", "Student")
                        .WithMany("OtherActivities")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelperPE.Persistence.Entities.Users.TeacherEntity", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Pairs.PairAttendanceEntity", b =>
                {
                    b.HasOne("HelperPE.Persistence.Entities.Pairs.PairEntity", "Pair")
                        .WithMany("Attendances")
                        .HasForeignKey("PairId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelperPE.Persistence.Entities.Users.StudentEntity", "Student")
                        .WithMany("PairAttendances")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pair");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Pairs.PairEntity", b =>
                {
                    b.HasOne("HelperPE.Persistence.Entities.Pairs.SubjectEntity", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelperPE.Persistence.Entities.Users.TeacherEntity", "Teacher")
                        .WithMany("Pairs")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SubjectEntityTeacherEntity", b =>
                {
                    b.HasOne("HelperPE.Persistence.Entities.Pairs.SubjectEntity", null)
                        .WithMany()
                        .HasForeignKey("SubjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelperPE.Persistence.Entities.Users.TeacherEntity", null)
                        .WithMany()
                        .HasForeignKey("TeachersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Users.StudentEntity", b =>
                {
                    b.HasOne("HelperPE.Persistence.Entities.Faculty.FacultyEntity", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Events.EventEntity", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Pairs.PairEntity", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Users.StudentEntity", b =>
                {
                    b.Navigation("EventsAttendances");

                    b.Navigation("OtherActivities");

                    b.Navigation("PairAttendances");
                });

            modelBuilder.Entity("HelperPE.Persistence.Entities.Users.TeacherEntity", b =>
                {
                    b.Navigation("Pairs");
                });
#pragma warning restore 612, 618
        }
    }
}
